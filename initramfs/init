#!/bin/sh

## SPDX-License-Identifier: GPL-2.0-only
## Init script for JumpDrive
## Copyright (C) 2020 - postmarketOS
## Copyright (C) 2020 - Danctl12 <danct12@disroot.org>

echo "Welcome to JumpDrive"

. /info.sh
echo "Running on $PLATFORM"

. /init_functions.sh

# Environment variables that we want:
IP=172.16.42.1

# Create all the symlinks to /bin/busybox
mkdir -p /usr/bin
mkdir -p /sbin
mkdir -p /usr/sbin
echo "Installing Busybox..." && /bin/busybox --install -s

echo "Setup mke2fs"
ln /bin/mke2fs /bin/mkfs.ext2
ln /bin/mke2fs /bin/mkfs.ext3
ln /bin/mke2fs /bin/mkfs.ext4

# Mount things needed by this script
mkdir /proc
mkdir /sys
mkdir /etc
mount -t proc proc /proc
mount -t sysfs sysfs /sys

mkdir /config
mount -t configfs -o nodev,noexec,nosuid configfs /config

# /dev/pts (needed for telnet)
mkdir -p /dev/pts
mount -t devpts devpts /dev/pts

# LED indicator for MMC r/w access
if [ -n "$LED" ]; then
	echo $TRIGGER > /sys/class/leds/$LED/trigger
fi

# Create device nodes
echo "Creating device nodes..."
mknod /dev/null c 1 3
mknod /dev/tty c 5 0
mdev -s

# Finishing rescue setup
setup_usb_configfs
start_udhcpd
setup_telnetd

gzip -c -d splash.ppm.gz > /splash.ppm
mkfifo cmd_pipe

echo "
BAR_WIDTH=620
BAR_HEIGHT=20
BAR_LEFT=50
BAR_TOP=1100
BAR_R=100
BAR_G=100
BAR_B=100" > splash_conf

fbsplash -s /splash.ppm -f cmd_pipe -i splash_conf -c &

if grep -q devnum= /proc/cmdline; then
    devnum=$(cat /proc/cmdline | sed "s/ /\n/g" | grep devnum= | awk -F "=" '{ print $2 }')
else
	# Fallback to internal if all else fails xD
	devnum="2"
fi

# System - image things
ln -s /etc/recovery.fstab.${devnum} /etc/recovery.fstab
ln -s /etc/recovery.fstab.${devnum} /etc/fstab

mkdir /persist
mount /persist
rm /persist/reboot-recovery
umount /persist

mkdir /cache
mkdir /system
mkdir /data

mount /cache
mount /system
mount /data
if [ -f /cache/recovery/ubuntu_command ]; then
	echo "0" > cmd_pipe

	echo "Running system update!"
	echo "PLEASE WAIT!"

	sh ./system-image-upgrader /cache/recovery/ubuntu_command
	sync
	reboot -f
	exit 1
fi

loop_forever
